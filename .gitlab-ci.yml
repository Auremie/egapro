---
include:
- '/k8s/app/.deploy-egapro-app.yml'
- '/k8s/postgres/.deploy-egapro-postgres.yml'
- '/k8s/memcached/.deploy-egapro-memcached.yml'
- '/k8s/kinto/.deploy-egapro-kinto.yml'

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_VERSION: "18.06"
  IMAGE_INFRA_BASE_NAME: "infra/images-docker"
  DEV_ENVIRONMENT_NAME: "dev.factory"
  PROD_ENVIRONMENT_NAME: "incubateur"
  APP_PORT: 9000

stages:
- "Registration"
- "Deploy Egapro"

###########################################
###       REGISTER DOCKER IMAGES        ###
###########################################

#
.register_stage: &register_stage
  stage: "Registration"
  image: docker:$DOCKER_VERSION
  services:
  - docker:$DOCKER_VERSION-dind
  before_script:
  - echo "$CI_JOB_TOKEN" | docker login $CI_REGISTRY -u gitlab-ci-token --password-stdin
  - docker pull $IMAGE_NAME:$CI_COMMIT_BEFORE_SHA || true
  script:
  - echo "Build $IMAGE_NAME:$CI_COMMIT_SHA from $IMAGE_NAME:$CI_COMMIT_BEFORE_SHA"
  - docker build --cache-from $IMAGE_NAME:$CI_COMMIT_BEFORE_SHA -t $IMAGE_NAME:$CI_COMMIT_SHA $CONTEXT
  - docker push $IMAGE_NAME
#

Register api image:
  <<: *register_stage
  variables:
    CONTEXT: packages/api
    IMAGE_NAME: $CI_REGISTRY_IMAGE/api

Register app image:
  <<: *register_stage
  variables:
    CONTEXT: packages/app
    IMAGE_NAME: $CI_REGISTRY_IMAGE/app

Register init kinto image:
  <<: *register_stage
  variables:
    CONTEXT: packages/kinto
    IMAGE_NAME: $CI_REGISTRY_IMAGE/kinto


###########################################
###            DEPLOY TO K8S            ###
###########################################

#
.deploy_stage: &deploy_stage
  stage: "Deploy Egapro"
  dependencies: []
  variables: &deploy_stage_variables
    EGAPRO_REGISTRY: $CI_REGISTRY_IMAGE
    IMAGE_TAG: $CI_COMMIT_SHA
#

Deploy @egapro/app (dev):
  <<: *deploy_stage
  extends: .deploy-egapro-app-k8s-dev
  variables:
    <<: *deploy_stage_variables
    PORT: $APP_PORT
  environment:
    name: $DEV_ENVIRONMENT_NAME
  except:
  - master

Deploy @egapro/postgres (dev):
  <<: *deploy_stage
  extends: .deploy-egapro-postgres-k8s-dev
  variables:
    <<: *deploy_stage_variables
  environment:
    name: $DEV_ENVIRONMENT_NAME
  except:
  - master

Deploy @egapro/memcached (dev):
  <<: *deploy_stage
  extends: .deploy-egapro-memcached-k8s-dev
  variables:
    <<: *deploy_stage_variables
  environment:
    name: $DEV_ENVIRONMENT_NAME
  except:
  - master

Deploy @egapro/kinto (dev):
  <<: *deploy_stage
  extends: .deploy-egapro-kinto-k8s-dev
  variables:
    <<: *deploy_stage_variables
  environment:
    name: $DEV_ENVIRONMENT_NAME
  except:
  - master
